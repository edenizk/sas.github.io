{"ast":null,"code":"import _classCallCheck from \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\src\\\\components\\\\AlbumOverlay.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\n\nvar AlbumOverlay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AlbumOverlay, _Component);\n\n  function AlbumOverlay() {\n    var _this;\n\n    _classCallCheck(this, AlbumOverlay);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AlbumOverlay).call(this));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(AlbumOverlay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.albumHref = this.props.albumHref;\n      this.accessToken = this.props.accessToken;\n      console.log(this.albumHref);\n      fetch(\"https://api.spotify.com/v1/albums/\".concat(this.albumHref), {\n        headers: {\n          'Authorization': 'Bearer ' + this.accessToken\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        try {\n          _this2.setState({\n            album: {\n              artist_url: data.artists[0].external_urls.spotify,\n              artist_name: data.artists[0].name,\n              album_url: data.external_urls.spotify,\n              image_url: data.images[0].url,\n              album_name: data.name,\n              popularity: data.popularity,\n              release_date: data.release_date,\n              total_tracks: data.total_tracks,\n              tracks: data.tracks.items.map(function (item) {\n                return {\n                  duration: item.duration_ms,\n                  track_name: item.name,\n                  preview_url: item.preview_url\n                };\n              })\n            }\n          });\n        } catch (e) {\n          console.log(e);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        id: \"overlay_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, !this.state.album ? React.createElement(\"div\", {\n        id: \"overlay_loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Loading...\") : React.createElement(\"div\", {\n        id: \"album_details_wrapper\",\n        style: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.album.image_url,\n        style: {\n          position: 'absolute',\n          left: '0',\n          height: '100%',\n          width: '100%',\n          zIndex: '500',\n          filter: 'blur(10px) brightness(50%)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AlbumOverlay;\n}(Component);\n\nexport default AlbumOverlay;","map":{"version":3,"sources":["Z:\\Allegro Spotify\\a2\\my-app\\src\\components\\AlbumOverlay.js"],"names":["React","Component","AlbumOverlay","state","albumHref","props","accessToken","console","log","fetch","headers","then","response","json","data","setState","album","artist_url","artists","external_urls","spotify","artist_name","name","album_url","image_url","images","url","album_name","popularity","release_date","total_tracks","tracks","items","map","item","duration","duration_ms","track_name","preview_url","e","position","left","height","width","zIndex","filter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass AlbumOverlay extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {}\r\n  }\r\n  componentDidMount() {\r\n    this.albumHref = this.props.albumHref\r\n    this.accessToken = this.props.accessToken\r\n    console.log(this.albumHref)\r\n\r\n    fetch(`https://api.spotify.com/v1/albums/${this.albumHref}`, {\r\n      headers: {'Authorization': 'Bearer ' + this.accessToken}\r\n    }).then(response => response.json())\r\n    .then(data => {\r\n      try{\r\n        this.setState({\r\n          album: {\r\n              artist_url: data.artists[0].external_urls.spotify,\r\n              artist_name: data.artists[0].name,\r\n              album_url: data.external_urls.spotify,\r\n              image_url: data.images[0].url,\r\n              album_name: data.name,\r\n              popularity: data.popularity,\r\n              release_date: data.release_date,\r\n              total_tracks: data.total_tracks,\r\n              tracks: data.tracks.items.map((item) =>\r\n                             {return {duration: item.duration_ms, track_name: item.name, preview_url: item.preview_url}} )\r\n            }\r\n        })\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n      }\r\n    })\r\n\r\n  }\r\n  render(){\r\n    console.log(this.state)\r\n    return(\r\n      <div id='overlay_wrapper'>\r\n        {!this.state.album ?\r\n        <div id='overlay_loading'>Loading...</div> \r\n        :\r\n        <div id=\"album_details_wrapper\" style={{}}>\r\n          <div>\r\n            <img src={this.state.album.image_url} style={{position: 'absolute',left: '0', height:'100%', width: '100%', zIndex: '500', filter: 'blur(10px) brightness(50%)'}}></img>\r\n          </div>\r\n        </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AlbumOverlay"]},"metadata":{},"sourceType":"module"}