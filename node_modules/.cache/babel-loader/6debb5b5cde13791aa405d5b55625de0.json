{"ast":null,"code":"function compareValues(key, order_by) {\n  return function (a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n      //property doesnt exist\n      console.log('choose a key for ');\n      return 0;\n    }\n\n    var varA = typeof a[key] === 'string' ? a[key].toUpperCase() : a[key];\n    var varB = typeof b[key] === 'string' ? b[key].toUpperCase() : b[key];\n    var comparison = 0;\n\n    if (varA > varB) {\n      comparison = 1;\n    } else if (varA < varB) {\n      comparison = -1;\n    }\n\n    return order_by === 'desc' ? comparison * -1 : comparison;\n  };\n}\n\nexport default compareValues;","map":{"version":3,"sources":["Z:\\Allegro Spotify\\a2\\my-app\\src\\events\\CompareValues.js"],"names":["compareValues","key","order_by","a","b","hasOwnProperty","console","log","varA","toUpperCase","varB","comparison"],"mappings":"AAAA,SAASA,aAAT,CAAuBC,GAAvB,EAA4BC,QAA5B,EAAqC;AACjC,SAAO,UAASC,CAAT,EAAYC,CAAZ,EAAc;AACnB,QAAG,CAACD,CAAC,CAACE,cAAF,CAAiBJ,GAAjB,CAAD,IAA0B,CAACG,CAAC,CAACC,cAAF,CAAiBJ,GAAjB,CAA9B,EAAoD;AAClD;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,aAAO,CAAP;AACD;;AAED,QAAMC,IAAI,GAAI,OAAOL,CAAC,CAACF,GAAD,CAAR,KAAkB,QAAnB,GACDE,CAAC,CAACF,GAAD,CAAD,CAAOQ,WAAP,EADC,GACsBN,CAAC,CAACF,GAAD,CADpC;AAEA,QAAMS,IAAI,GAAI,OAAON,CAAC,CAACH,GAAD,CAAR,KAAkB,QAAnB,GACDG,CAAC,CAACH,GAAD,CAAD,CAAOQ,WAAP,EADC,GACsBL,CAAC,CAACH,GAAD,CADpC;AAGA,QAAIU,UAAU,GAAG,CAAjB;;AAEA,QAAGH,IAAI,GAAGE,IAAV,EAAe;AACbC,MAAAA,UAAU,GAAG,CAAb;AACD,KAFD,MAEM,IAAGH,IAAI,GAAGE,IAAV,EAAe;AACnBC,MAAAA,UAAU,GAAG,CAAC,CAAd;AACD;;AAED,WACGT,QAAQ,KAAK,MAAd,GAAyBS,UAAU,GAAG,CAAC,CAAvC,GAA4CA,UAD9C;AAGD,GAvBD;AAwBD;;AAED,eAAeX,aAAf","sourcesContent":["function compareValues(key, order_by){\r\n    return function(a, b){\r\n      if(!a.hasOwnProperty(key) || !b.hasOwnProperty(key)){\r\n        //property doesnt exist\r\n        console.log('choose a key for ')\r\n        return 0\r\n      }\r\n  \r\n      const varA = (typeof a[key] === 'string')  \r\n                ? a[key].toUpperCase() : a[key]\r\n      const varB = (typeof b[key] === 'string')  \r\n                ? b[key].toUpperCase() : b[key]\r\n  \r\n      let comparison = 0;\r\n  \r\n      if(varA > varB){\r\n        comparison = 1\r\n      }else if(varA < varB){\r\n        comparison = -1\r\n      }\r\n  \r\n      return(\r\n        (order_by === 'desc') ? (comparison * -1) : comparison\r\n      )\r\n    }\r\n  }\r\n\r\n  export default compareValues"]},"metadata":{},"sourceType":"module"}