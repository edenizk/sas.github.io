{"ast":null,"code":"import _classCallCheck from \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\src\\\\components\\\\AlbumOverlay.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport Tracks from './Tracks.js';\n\nvar AlbumOverlay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AlbumOverlay, _Component);\n\n  function AlbumOverlay() {\n    var _this;\n\n    _classCallCheck(this, AlbumOverlay);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AlbumOverlay).call(this));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(AlbumOverlay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.albumHref = this.props.albumHref;\n      this.accessToken = this.props.accessToken;\n      console.log(this.albumHref);\n      fetch(\"https://api.spotify.com/v1/albums/\".concat(this.albumHref), {\n        headers: {\n          'Authorization': 'Bearer ' + this.accessToken\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n\n        try {\n          _this2.setState({\n            album: {\n              artist_url: data.artists[0].external_urls.spotify,\n              artist_name: data.artists[0].name,\n              album_url: data.external_urls.spotify,\n              image_url: data.images[0].url,\n              album_name: data.name,\n              popularity: data.popularity,\n              release_date: data.release_date,\n              total_tracks: data.total_tracks,\n              tracks: data.tracks.items.map(function (item) {\n                return {\n                  duration: item.duration_ms,\n                  track_name: item.name,\n                  preview_url: item.preview_url\n                };\n              })\n            }\n          });\n        } catch (e) {\n          console.log(e);\n        }\n      });\n    }\n  }, {\n    key: \"getDuration\",\n    value: function getDuration(ms) {\n      var minutes = Math.floor(ms / 60000);\n      var seconds = (ms % 60000 / 1000).toFixed(0) - 1;\n      return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        id: \"overlay_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, !this.state.album ? React.createElement(\"div\", {\n        id: \"overlay_loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Loading...\") : React.createElement(\"div\", {\n        id: \"album_details_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"album_background\",\n        src: this.state.album.image_url,\n        alt: \"blured background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"overlay_album_info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"inline_image_pop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.album.image_url,\n        alt: \"album cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Popularity: \"), this.state.album.popularity), React.createElement(\"div\", {\n        id: \"player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"audio\", {\n        src: this.state.current_song_src,\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.current_song))), React.createElement(\"div\", {\n        id: \"overlay_info_text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Album\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        href: this.state.album.album_url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.album.album_name), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"By \"), React.createElement(\"a\", {\n        href: this.state.album.artist_url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.state.album.artist_name), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Release Date: \"), this.state.album.release_date, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Total Tracks: \"), this.state.album.total_tracks, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Total Duration: \")))), React.createElement(Tracks, {\n        tracks: this.state.album,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AlbumOverlay;\n}(Component);\n\nexport default AlbumOverlay;","map":{"version":3,"sources":["Z:\\Allegro Spotify\\a2\\my-app\\src\\components\\AlbumOverlay.js"],"names":["React","Component","Tracks","AlbumOverlay","state","albumHref","props","accessToken","console","log","fetch","headers","then","response","json","data","setState","album","artist_url","artists","external_urls","spotify","artist_name","name","album_url","image_url","images","url","album_name","popularity","release_date","total_tracks","tracks","items","map","item","duration","duration_ms","track_name","preview_url","e","ms","minutes","Math","floor","seconds","toFixed","current_song_src","current_song"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nimport Tracks from './Tracks.js';\r\n\r\nclass AlbumOverlay extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.albumHref = this.props.albumHref\r\n    this.accessToken = this.props.accessToken\r\n    console.log(this.albumHref)\r\n\r\n    fetch(`https://api.spotify.com/v1/albums/${this.albumHref}`, {\r\n      headers: {'Authorization': 'Bearer ' + this.accessToken}\r\n    }).then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      try{\r\n        this.setState({\r\n          album: {\r\n              artist_url: data.artists[0].external_urls.spotify,\r\n              artist_name: data.artists[0].name,\r\n              album_url: data.external_urls.spotify,\r\n              image_url: data.images[0].url,\r\n              album_name: data.name,\r\n              popularity: data.popularity,\r\n              release_date: data.release_date,\r\n              total_tracks: data.total_tracks,\r\n              tracks: data.tracks.items.map((item) =>\r\n                             {return {\r\n                               duration: item.duration_ms,\r\n                               track_name: item.name,\r\n                               preview_url: item.preview_url}})\r\n            }\r\n        })\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n      }\r\n    })\r\n  }\r\n\r\n  getDuration(ms){\r\n    var minutes = Math.floor(ms / 60000);\r\n    var seconds = ((ms % 60000) / 1000).toFixed(0) - 1;\r\n    return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n  }\r\n\r\n  render(){\r\n    console.log(this.state)\r\n    return(\r\n      <div id='overlay_wrapper'>\r\n        {!this.state.album ?\r\n        <div id='overlay_loading'>Loading...</div> \r\n        :\r\n        <div id='album_details_wrapper'>\r\n            <img id='album_background' src={this.state.album.image_url} alt='blured background'/>\r\n            <div id='overlay_album_info'>\r\n              <div id='inline_image_pop'>\r\n                <img src={this.state.album.image_url} alt='album cover'/>\r\n                <div><span>Popularity: </span>{this.state.album.popularity}</div>\r\n                <div id=\"player\">\r\n                  <audio src={this.state.current_song_src} controls></audio>\r\n                  <div>{this.state.current_song}</div>\r\n                </div>\r\n              </div>\r\n              <div id='overlay_info_text'>\r\n                <div>\r\n                  <span>Album</span><br></br>\r\n                  <a href={this.state.album.album_url} target='_blank' rel=\"noopener noreferrer\">\r\n                    {this.state.album.album_name}\r\n                  </a><br></br>\r\n                  <span>By </span>\r\n                  <a href={this.state.album.artist_url} target='_blank' rel=\"noopener noreferrer\">\r\n                    {this.state.album.artist_name}\r\n                  </a><br></br>\r\n                  <span>Release Date: </span>{this.state.album.release_date}<br></br>\r\n                  <span>Total Tracks: </span>{this.state.album.total_tracks}<br></br>\r\n                  <span>Total Duration: </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Tracks tracks={this.state.album}/>\r\n        </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AlbumOverlay"]},"metadata":{},"sourceType":"module"}