{"ast":null,"code":"import _classCallCheck from \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"Z:\\\\Allegro Spotify\\\\a2\\\\my-app\\\\src\\\\components\\\\AlbumOverlay.js\";\nimport React, { Component } from 'react';\nimport { Progress } from 'react-sweet-progress';\nimport '../App.css';\nimport \"react-sweet-progress/lib/style.css\";\nimport PopularityProgress from './PopularityProgress.js';\n\nvar AlbumOverlay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AlbumOverlay, _Component);\n\n  function AlbumOverlay() {\n    var _this;\n\n    _classCallCheck(this, AlbumOverlay);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AlbumOverlay).call(this));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(AlbumOverlay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.albumHref = this.props.albumHref;\n      this.accessToken = this.props.accessToken;\n      fetch(\"https://api.spotify.com/v1/albums/\".concat(this.albumHref), {\n        headers: {\n          'Authorization': 'Bearer ' + this.accessToken\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        // console.log(data)\n        try {\n          _this2.setState({\n            album: {\n              artist_url: data.artists[0].external_urls.spotify,\n              artist_name: data.artists[0].name,\n              album_url: data.external_urls.spotify,\n              image_url: data.images[0].url,\n              album_name: data.name,\n              popularity: data.popularity,\n              release_date: data.release_date,\n              total_tracks: data.total_tracks,\n              tracks: data.tracks.items.map(function (item) {\n                return {\n                  duration: item.duration_ms,\n                  track_name: item.name,\n                  preview_url: item.preview_url\n                };\n              })\n            }\n          });\n        } catch (e) {\n          console.log(e);\n        }\n      });\n    }\n  }, {\n    key: \"getDuration\",\n    value: function getDuration(ms) {\n      var minutes = Math.floor(ms / 60000);\n      var seconds = (ms % 60000 / 1000).toFixed(0) - 1;\n      return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\n    }\n  }, {\n    key: \"getTotalDuration\",\n    value: function getTotalDuration() {\n      var totalDuration = 0;\n      this.state.album.tracks.map(function (track) {\n        return totalDuration += track.duration;\n      });\n      console.log(this.getDuration(totalDuration));\n      return this.getDuration(totalDuration);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        id: \"overlay_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, !this.state.album ? React.createElement(\"div\", {\n        id: \"overlay_loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Loading...\") : React.createElement(\"div\", {\n        id: \"album_details_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"album_background\",\n        src: this.state.album.image_url,\n        alt: \"blured background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"overlay_album_info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"inline_image_pop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(PopularityProgress, {\n        popularity: this.state.album.popularity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        id: \"album_cover\",\n        src: this.state.album.image_url,\n        alt: \"album cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"audio\", {\n        autoPlay: \"true\",\n        onPlay: function onPlay() {\n          return _this3.setState({\n            current_song_statue: 'Playing:'\n          });\n        },\n        onPause: function onPause() {\n          return _this3.setState({\n            current_song_statue: 'Paused:'\n          });\n        },\n        src: this.state.current_song_src,\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.current_song_statue, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.current_song)))), React.createElement(\"div\", {\n        id: \"overlay_info_text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Album\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        href: this.state.album.album_url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.album.album_name), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"By \"), React.createElement(\"a\", {\n        href: this.state.album.artist_url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.album.artist_name), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Release Date: \"), this.state.album.release_date, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Total Tracks: \"), this.state.album.total_tracks, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Total Duration: \"), this.getTotalDuration(), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \" min\")))), React.createElement(\"div\", {\n        id: \"tracks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.album.tracks.map(function (song) {\n        return React.createElement(\"li\", {\n          className: \"track\",\n          onClick: function onClick() {\n            _this3.setState({\n              current_song: song.track_name,\n              current_song_src: song.preview_url\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"track_name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, song.track_name)), React.createElement(\"div\", {\n          id: \"track_duration\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, _this3.getDuration(song.duration)));\n      })))));\n    }\n  }]);\n\n  return AlbumOverlay;\n}(Component);\n\nexport default AlbumOverlay;","map":{"version":3,"sources":["Z:\\Allegro Spotify\\a2\\my-app\\src\\components\\AlbumOverlay.js"],"names":["React","Component","Progress","PopularityProgress","AlbumOverlay","state","albumHref","props","accessToken","fetch","headers","then","response","json","data","setState","album","artist_url","artists","external_urls","spotify","artist_name","name","album_url","image_url","images","url","album_name","popularity","release_date","total_tracks","tracks","items","map","item","duration","duration_ms","track_name","preview_url","e","console","log","ms","minutes","Math","floor","seconds","toFixed","totalDuration","track","getDuration","current_song_statue","current_song_src","current_song","getTotalDuration","song"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Progress } from 'react-sweet-progress';\r\nimport '../App.css';\r\nimport \"react-sweet-progress/lib/style.css\";\r\n\r\nimport PopularityProgress from './PopularityProgress.js'\r\n\r\nclass AlbumOverlay extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.albumHref = this.props.albumHref\r\n    this.accessToken = this.props.accessToken\r\n\r\n    fetch(`https://api.spotify.com/v1/albums/${this.albumHref}`, {\r\n      headers: {'Authorization': 'Bearer ' + this.accessToken}\r\n    }).then(response => response.json())\r\n    .then(data => {\r\n     // console.log(data)\r\n      try{\r\n        this.setState({\r\n          album: {\r\n              artist_url: data.artists[0].external_urls.spotify,\r\n              artist_name: data.artists[0].name,\r\n              album_url: data.external_urls.spotify,\r\n              image_url: data.images[0].url,\r\n              album_name: data.name,\r\n              popularity: data.popularity,\r\n              release_date: data.release_date,\r\n              total_tracks: data.total_tracks,\r\n              tracks: data.tracks.items.map((item) =>\r\n                             {return {\r\n                               duration: item.duration_ms,\r\n                               track_name: item.name,\r\n                               preview_url: item.preview_url}})\r\n            }\r\n        })\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n      }\r\n    })\r\n  }\r\n\r\n  getDuration(ms){\r\n    var minutes = Math.floor(ms / 60000);\r\n    var seconds = ((ms % 60000) / 1000).toFixed(0) - 1;\r\n    return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n  }\r\n\r\n  getTotalDuration(){\r\n    let totalDuration = 0\r\n    this.state.album.tracks.map((track) => totalDuration += track.duration)\r\n    console.log(this.getDuration(totalDuration))\r\n    return this.getDuration(totalDuration)\r\n  }\r\n\r\n  render(){\r\n    console.log(this.state)\r\n    return(\r\n      <div id='overlay_wrapper'>\r\n        {!this.state.album ?\r\n        <div id='overlay_loading'>Loading...</div> \r\n        :\r\n        <div id='album_details_wrapper'>\r\n            <img id='album_background' src={this.state.album.image_url} alt='blured background'/>\r\n            <div id='overlay_album_info'>\r\n              <div id='inline_image_pop'>\r\n                <PopularityProgress popularity={this.state.album.popularity}/>\r\n                <img id='album_cover' src={this.state.album.image_url} alt='album cover'/>\r\n                <div id=\"player\">\r\n                  <audio autoPlay='true' \r\n                    onPlay={() => this.setState({current_song_statue: 'Playing:'})}\r\n                    onPause={() => this.setState({current_song_statue: 'Paused:'})}\r\n                    src={this.state.current_song_src} controls></audio>\r\n                  <div>{this.state.current_song_statue} <br></br><span>{this.state.current_song}</span></div>\r\n                </div>\r\n              </div>\r\n              <div id='overlay_info_text'>\r\n                <div>\r\n                  <span>Album</span><br></br>\r\n                  <a href={this.state.album.album_url} target='_blank' rel=\"noopener noreferrer\">\r\n                    {this.state.album.album_name}\r\n                  </a><br></br>\r\n                  <span>By </span>\r\n                  <a href={this.state.album.artist_url} target='_blank' rel=\"noopener noreferrer\">\r\n                    {this.state.album.artist_name}\r\n                  </a><br></br>\r\n                  <span>Release Date: </span>{this.state.album.release_date}<br></br>\r\n                  <span>Total Tracks: </span>{this.state.album.total_tracks}<br></br>\r\n                  <span>Total Duration: </span>{this.getTotalDuration()}<span> min</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div id='tracks'> \r\n                <ul>\r\n                {this.state.album.tracks.map(song =>\r\n                <li className='track' onClick=\r\n                    {() => {this.setState({\r\n                    current_song: song.track_name,\r\n                    current_song_src: song.preview_url})}}>\r\n                  <div id=\"track_name\" >\r\n                    <img></img>\r\n                    <div>{song.track_name}</div>\r\n                  </div>\r\n                  <div id=\"track_duration\">{this.getDuration(song.duration)}</div>\r\n                </li>\r\n              )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AlbumOverlay"]},"metadata":{},"sourceType":"module"}